// Main ARM template file for setting up the resources needed for the build lab. 
{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "secretName": {
            "type": "string",
            "defaultValue": "GitHubPAT"
        },
        "secretValue": {
            "type": "securestring",
            "metadata": {
            "description": "GitHub Personal Access Token for Project Catalog"
            }
        },
        "catalogRepositoryUrl": {
            "type": "string",
            "defaultValue": "https://github.com/xnkevinnguyen/devbox-configuration"
        }
    },
    "variables": {
        "devcenterName": "myBuildDevCenter",
        "keyVaultName": "myBuildKeyVault",
        "userAssignedIdentityName": "myUserAssignedIdentity",
        "projectName": "myProject"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2024-11-30",
            "name": "[variables('userAssignedIdentityName')]",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2024-04-01-preview",
            "name": "[variables('keyVaultName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
            "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
            ],
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enableRbacAuthorization": true
            },
            "resources": [
                {
                    "type": "secrets",
                    "apiVersion": "2024-04-01-preview",
                    "name": "[parameters('secretName')]",
                    "dependsOn": [
                            "[variables('keyVaultName')]"
                        ],
                    "properties": {
                    "value": "[parameters('secretValue')]"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/providers/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[concat(variables('keyVaultName'), '/Microsoft.Authorization/', guid(resourceGroup().id, variables('keyVaultName'), variables('userAssignedIdentityName'), 'keyVaultSecretUser'))]",
            "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
                "principalId": "[reference(variables('userAssignedIdentityName'), '2023-01-31').principalId]",
                "scope": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "principalType": "ServicePrincipal"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
            ]
        },
        {
            "type": "Microsoft.DevCenter/devcenters",
            "apiVersion": "2025-02-01",
            "name": "[variables('devcenterName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', variables('userAssignedIdentityName'))]": {}
                }
            },
            "properties": {
                "projectCatalogSettings": {
                    "catalogItemSyncEnableStatus": "Enabled"
                },
                "networkSettings": {
                    "microsoftHostedNetworkEnableStatus": "Enabled"
                },
                "devBoxProvisioningSettings": {
                    "installAzureMonitorAgentEnableStatus": "Enabled"
                }
            }
        },
        {
            "type": "Microsoft.DevCenter/projects",
            "apiVersion": "2024-10-01-preview",
            "name": "[variables('projectName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.DevCenter/devcenters', variables('devcenterName'))]"
            ],
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]": {}
                }
            },
            "properties": {
                "devCenterId": "[resourceId('Microsoft.DevCenter/devcenters', variables('devCenterName'))]",
                "catalogSettings": {
                    "catalogItemSyncTypes": ["ImageDefinition"]
                }
            },
            "resources": [
                {
                    "type": "catalogs",
                    "apiVersion": "2024-10-01-preview",
                    "name": "baseCatalog",
                    "properties": {
                        "gitHub": {
                            "uri": "[parameters('catalogRepositoryUrl')]",
                            "branch": "build2024",
                            "path": ".devcenter/catalog/image-definitions/contoso-base",
                            "secretIdentifier": "[concat('https://', variables('keyVaultName'), '.vault.azure.net/secrets/', parameters('secretName'))]"
                        },
                        "syncType": "Scheduled"
                    },
                    "dependsOn": [
                        "[variables('projectName')]",
                        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userAssignedIdentityName'))]"
                    ]
                }
            ]
        }
    ]
}